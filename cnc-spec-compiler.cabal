Name:           cnc-spec-compiler

Version:        0.2
-- [2010.11.10] 0.1.3.100 Bumping slightly after change to CNC_ASSUME_TR1
-- [2010.11.10] 0.1.3.101 New scheme for extracting version from cabal file.
-- [2010.12.06] 0.1.3.102 Bumped for recent translator plugin rearchitecture.
-- [2010.12.06] 0.1.3.103 Bumped for completion of autodone facility.
-- [2010.12.06] 0.1.3.104 Bumped for fix of autodone to remove item collections re: cycles.
-- [2010.12.06] 0.1.3.105 Bumped for done-signalling for reductions.
-- [2011.01.25] 0.1.3.106 Bumped for signifcant work in various areas.
-- [2011.01.25] 0.1.3.107 Bumped for new binary trace recording.
-- [2011.01.25] 0.1.3.108 Bumped for new binary trace format.
-- [2011.08.10] 0.2.0.0   Bumped because the Spec Compiler has been factored
--                        into its own repo.


License: BSD3
License-file:   LICENSE
Stability: Beta
Author:			Ryan Newton <rrnewton@gmail.com>
Maintainer:		Ryan Newton <rrnewton@gmail.com>
homepage: http://software.intel.com/en-us/articles/intel-concurrent-collections-for-cc/
Copyright: Copyright (c) 2009-2010 Intel Corporation
Synopsis: Compiler/Translator for CnC Specification Files.
Description: Intel (Concurrent Collections) CnC is a data-flow like
 deterministic parallel programming model, similar to
 stream-processing but in which nodes in the computation graph share data in tables.
 In CnC, the structure of the graph and metadata about data-access
 patterns are stored in a specification, which can be used by this
 tool to generate code which will orchestrate the execution of the graph.

Category: system, concurrent
Cabal-Version: >=1.6

build-type: Simple

source-repository head
  type:     git
  location: git://github.com/rrnewton/CnC-Spec-Compiler.git

Executable cnc
  Main-is:           Intel/Cnc/Spec/Main.hs
  Build-Depends:     base >= 3 && < 5, directory, process, containers, unix, bytestring
                   , prettyclass, pretty, HUnit, mtl
                   , stringtable-atom, filepath, split
                   , parsec >= 3.1.0
                   , hubigraph
                   , hscurses, ansi-terminal
                   , fgl
                   , zlib, binary
-- Need these for GraphAnalysis.hs:
                   , Graphalyze 
--		   , graphviz
--                 , haxr, HTTP, network

  extensions: CPP
-- Disabling for now.  We will make this optional:
--  cpp-options: -DCNCVIZ

  other-modules:  Intel.Cnc.Spec.AST    Intel.Cnc.Spec.CncLexer    Intel.Cnc.Spec.CncGrammar
                  Intel.Cnc.Spec.SrcLoc Intel.Cnc.Spec.GatherGraph Intel.Cnc.Spec.Codegen.CppOld

--  GHC-Options: -O2 -threaded 
